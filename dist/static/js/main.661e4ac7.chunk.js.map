{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","store/actions/projectActions.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/projects/CreateProject.js","components/projects/ProjectListUpdated.js","components/projects/UpdateProject.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["compose","connect","state","usersBase","firestore","ordered","users","dispatch","signOut","firebase","auth","then","type","firestoreConnect","collection","props","pseudoUser","map","item","react_default","a","createElement","key","id","initials","className","react_router_dom","to","onClick","SignedOutLinks","profile","data","links","uid","layout_SignedInLinks","layout_SignedOutLinks","createProject","title","content","add","authorFirstName","authorLastName","authorId","createdAt","Date","ProjectList","listeHtml","projectsBase","user","moment","toDate","toString","calendar","scope","Notifications","notifications","time","fromNow","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","projects","orderBy","limit","ownProps","match","params","project","CreateProject","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","_this$state","onChange","htmlFor","ProjectListUpdated","deleteProject","handleUpdate","UpdateProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleUpdate2","event","updateProject","projects_ProjectListUpdated","projectReducer","doc","update","delete","SignIn","email","password","signIn","authError","onSubmit","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","resp","set","App","layout_Navbar","exact","path","component","ProjectDetails","initState","authReducer","arguments","length","undefined","action","console","log","objectSpread","message","assign","concat","toConsumableArray","filter","proj","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","myStore","createStore","applyMiddleware","thunk","withExtraArgument","getFirestore","reduxFirestore","rrfProps","config","createFirestoreInstance","ReactDOM","render","es","store","react_redux_firebase_es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.661e4ac7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose} from 'redux';\r\n//actions\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  \r\n  const liste = props.usersBase || []\r\n  //console.log('user',props.usersBase)\r\n  const pseudoUser = liste.map( ( item ) => (\r\n    <p key = { item.id } >\r\n      { item.initials }\r\n    </p>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink \r\n            to = '/create'  \r\n            className = \"btn white lighten-1\"\r\n          > \r\n              New Project \r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink \r\n            to = '/update' \r\n            className = \"btn white lighten-1\" \r\n          > \r\n            Update & Delete Project \r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <a \r\n            onClick = { props.signOut } \r\n            className = \"btn black lighten-1\" \r\n          > \r\n            Log Out \r\n          </a>\r\n        </li>\r\n        <li>\r\n          <NavLink \r\n            to = '/' \r\n            className = \"btn btn-floating pink lighten-1\"\r\n          >\r\n            { pseudoUser }\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersBase: state.firestore.ordered.users,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([\r\n    { collection: 'users'},\r\n  ]))(SignedInLinks);","import firebase from 'firebase/app';\r\nimport 'firebase/auth'\r\n\r\nexport const signIn = (credentials) => {\r\n  return (dispatch) => {\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    )\r\n    .then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS' });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: 'LOGIN_ERROR', err });\r\n    });     \r\n  }\r\n}\r\nexport const signOut = () => {\r\n  return (dispatch) => {      \r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n    });\r\n  }\r\n}\r\nexport const signUp = (newUser) => {\r\n  return (dispatch) => {      \r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email, \r\n      newUser.password\r\n    )\r\n    .then(resp => {\r\n      return firebase.firestore().collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      });\r\n    })\r\n    .then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}","import React from 'react'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className = \"right\">\r\n        <li>\r\n          <NavLink \r\n            to = '/signup' \r\n            className = \"btn blue lighten-1\"\r\n          > \r\n            Signup \r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink \r\n            to = '/signin' \r\n            className = \"btn yellow lighten-1\"\r\n          > \r\n            Login \r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n//components\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  //console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks profile = { profile } /> : <SignedOutLinks />;\r\n\r\n  return (\r\n    <nav className = \"nav-wrapper grey darken-3\">\r\n      <div className = \"container\">\r\n        <Link \r\n          to = '/' \r\n          className = \"brand-logo\"\r\n        >\r\n          MyApp\r\n        </Link>\r\n        { links }\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //console.log(state);\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firestore.data.users\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import 'firebase/firestore'\r\nimport firebase from 'firebase/app'\r\n\r\nconst createProject = (title, content) => { \r\n  return (dispatch) => { \r\n    \r\n    //const auth = getState().firebase.auth.uid;\r\n    // const auth1 = getState().firebase.auth.firstName;\r\n    // const auth2 = getState().firebase.auth.lastName;\r\n\r\n    //console.log(auth)\r\n    // console.log(auth1)\r\n    // console.log(auth2)\r\n\r\n    // const allo = getState().firestore.data.projects;\r\n    // const onfire = getState().firestore.data.users;\r\n\r\n    // var expArray = [];\r\n    // let j=0;\r\n    // for(var i in auth){ \r\n    //   if(onfire[i].firs === \"f\"){ \r\n    //     expArray.push(allo[i]);\r\n    //     expArray[j].id = i; console.log(allo[i].authorFirstName)\r\n    //   }\r\n    //   j++; \r\n    // } \r\n    // console.log(expArray)\r\n    // console.log(expArray[0].authorFirstName)\r\n   \r\n  // const profile = getState().firebase.profile;\r\n  //const authorId = getState().auth.uid;\r\n   //console.log( onfire );\r\n    \r\n    firebase.firestore().collection('projects').add({\r\n      title: title,\r\n      content: content,\r\n      authorFirstName: \"Thamer\", \r\n      authorLastName: \"Gouider\", \r\n      authorId:123,\r\n      createdAt: new Date()\r\n    })\r\n    .then(() => {\r\n      dispatch({ \r\n        type: 'CREATE_PROJECT_SUCCESS',\r\n        title: title,\r\n        content: content,\r\n        authorFirstName: \"Thamer\",\r\n        authorLastName: \"Gouider\",\r\n        authorId: 123,\r\n        createdAt: new Date()\r\n      });\r\n    })\r\n  }\r\n};\r\nconst updateProject = (id, title, content) => {\r\n  return (dispatch) => {\r\n    firebase.firestore().collection('projects').doc(id).update({\r\n      title: title, \r\n      content: content\r\n    })\r\n    .then(() => {\r\n      dispatch({\r\n        type: \"UPDATE_PROJECT_SUCCESS\",\r\n        id\r\n      })\r\n    })\r\n  }\r\n}\r\nconst deleteProject = (id) => {\r\n  return (dispatch) => { \r\n    if (id !== null){\r\n      //console.log(id)\r\n      firebase.firestore().collection('projects').doc(id).delete()\r\n      .then(() => {\r\n        dispatch({\r\n          type: \"DELETE_PROJECT_SUCCESS\",\r\n          id\r\n        })    \r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport { createProject, updateProject, deleteProject };","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectList = (props) => {\r\n\r\n    const liste = props.projectsBase || []\r\n    //console.log('liste',props.projectsBase)\r\n    const listeHtml = liste.map( (item) => (\r\n        <tr key = { item.id } >\r\n            <td> { item.title } </td>\r\n            <td> { item.content } </td>\r\n            <td> { item.user } </td>\r\n            <td> { moment( item.createdAt.toDate().toString()).calendar() } </td>\r\n            <Link \r\n                to = { '/project/' + item.id } \r\n                key = { item.id } \r\n                className = \"btn gery lighten-1\"\r\n            >\r\n                Details\r\n            </Link>\r\n        </tr> \r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <h2> All Projects </h2> \r\n            <table className = \"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope = \"col\"> title </th>\r\n                        <th scope = \"col\"> content </th>\r\n                        <th scope = \"col\"> user </th>\r\n                        <th scope = \"col\"> created at </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { listeHtml }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className = \"section\">\r\n    <div className = \"card z-depth-0\">\r\n      <div className = \"card-content\">\r\n      \r\n        <span className = \"card-title\"> Notifications </span>\r\n        <ul className = \"online-users\">\r\n          { notifications && notifications.map( (item) => {\r\n            return <li key = { item.id }>\r\n              <span \r\n                className = \"pink-text\"\r\n              > \r\n                { item.user } \r\n              </span>\r\n              <span> { item.content } </span>\r\n              <div \r\n                className = \"note-date grey-text\"\r\n              > \r\n                { moment( item.time.toDate() ).fromNow() } \r\n              </div>\r\n            </li>\r\n          })}\r\n        </ul>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose} from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom'\r\n//actions\r\nimport { createProject } from '../../store/actions/projectActions'\r\n//components\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notifications'\r\n\r\nclass Dashboard extends Component {\r\n  render() { \r\n    // console.log(this.props);\r\n    //const { projects } = this.props;\r\n    const { auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to = '/signin' /> \r\n\r\n    return (\r\n      <div className = \"dashboard container\">\r\n        <div className = \"row\">\r\n          <div>\r\n            <ProjectList \r\n              projectsBase = { this.props.projectsBase }\r\n            />\r\n          </div>\r\n          <div className = \"col s12 m5 offset-m1\">\r\n            <Notifications \r\n              notifications = { notifications }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n \r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projectsBase: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n return {\r\n      createProject: (title, content) => dispatch( createProject(title, content) ),\r\n  }\r\n }\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n  ]))(Dashboard);\r\n","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project } = props;\r\n  if (project) {\r\n\r\n    return (\r\n      <div className = \"container section project-details\">\r\n        <div className = \"card z-depth-0\">\r\n          <div className = \"card-content\">\r\n            <span className = \"card-title\"> \r\n              <h1>\r\n                <b> { project.title } </b>\r\n              </h1>\r\n            </span>\r\n            <hr/>\r\n            <p> <b> { project.content } </b> </p>\r\n            <p> \r\n              Posted by: <b> \r\n                            { project.authorFirstName } { project.authorLastName } \r\n                          </b> \r\n            </p>\r\n            <p>\r\n              <b> \r\n                { project.authorId } \r\n              </b> \r\n            </p>\r\n            <p> \r\n              Created at: <b> \r\n                            { moment( project.createdAt.toDate().toString()).calendar() } \r\n                          </b> \r\n            </p>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className = \"container center\">\r\n        <p> Loading project... </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ( state, ownProps ) => {\r\n  // console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project\r\n  }\r\n}\r\n\r\nexport default compose (\r\n  connect ( mapStateToProps ),\r\n  firestoreConnect([{\r\n    collection: 'projects'\r\n  }])\r\n) ( ProjectDetails )","import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n//actions\r\nimport { createProject } from '../../store/actions/projectActions'\r\n\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    const { title, content } = this.state\r\n    if(title !== null && content !== null){\r\n        this.props.createProject(title, content)\r\n        this.setState(\r\n            {\r\n              title: '',\r\n              content: ''      \r\n            }\r\n        )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n\r\n    return (\r\n      <div className  =\"container\">\r\n        <form className = \"white\">\r\n          <h5 className = \"grey-text text-darken-3\"> Create a New Project </h5>\r\n          <div className = \"input-field\">\r\n            <input \r\n              type = \"text\" \r\n              id = 'title' \r\n              onChange = { this.handleChange } \r\n            />\r\n            <label htmlFor = \"title\" > Project Title </label>\r\n          </div>\r\n          <div className = \"input-field\" >\r\n            <textarea \r\n              id=\"content\" \r\n              className=\"materialize-textarea\" \r\n              onChange = { this.handleChange }\r\n            />\r\n            <label htmlFor = \"content\" > Project Content </label>\r\n          </div>\r\n          <div className = \"input-field\">\r\n            <button \r\n              className = \"btn green lighten-1\" \r\n              onClick = { this.handleSubmit }\r\n            >\r\n              Create\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //console.log(state);\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (title, content) => dispatch( createProject(title, content) )\r\n  }\r\n}\r\n\r\nexport default connect ( \r\n  mapStateToProps, \r\n  mapDispatchToProps \r\n) ( CreateProject )","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst ProjectListUpdated = (props) => {\r\n\r\n    const liste = props.projectsBase || []\r\n    const listeHtml = liste.map( (item) => (         \r\n        <tr key = { item.id } > \r\n            <td> { item.title } </td>\r\n            <td> { item.content } </td>\r\n            <td> { moment( item.createdAt.toDate().toString() ).calendar() } </td>\r\n            <td> \r\n                <button \r\n                    onClick = { () => { props.deleteProject(item.id) } } \r\n                    className=\"btn red lighten-1\"\r\n                >\r\n                    Delete\r\n                </button> \r\n            </td>\r\n            <td> \r\n                <button \r\n                    onClick = { () => { props.handleUpdate( item.id, item.title, item.content ) } } \r\n                    className=\"btn blue lighten-1\"\r\n                >\r\n                    Edit\r\n                </button> \r\n            </td>\r\n\r\n        </tr> \r\n        )\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <h2> All Projects </h2> \r\n            <table className = \"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope = \"col\"> title </th>\r\n                        <th scope = \"col\"> content </th>\r\n                        <th scope = \"col\"> created at </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { listeHtml }\r\n                </tbody>\r\n            </table>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectListUpdated;","import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { compose} from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n//actions\r\nimport { updateProject, deleteProject } from '../../store/actions/projectActions'\r\n//components\r\nimport ProjectListUpdated from '../projects/ProjectListUpdated'\r\n\r\nclass UpdateProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        title:\"\",\r\n        content:\"\",\r\n        id: \"\"     \r\n    };\r\n}\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleUpdate = (id, title, content) => {\r\n    this.setState (\r\n        {\r\n            id: id,\r\n            title: title,\r\n            content: content\r\n        }\r\n    )\r\n  }\r\n  handleUpdate2 = (event) => {\r\n    event.preventDefault()\r\n    const { id, title, content } = this.state\r\n    if(title !== null && content !== null){\r\n        this.props.updateProject(id, title, content)\r\n        this.setState(\r\n            {\r\n                title:\"\",\r\n                content:\"\",\r\n                id: \"\"         \r\n            }\r\n        )\r\n    }   \r\n  }\r\n  render() {\r\n    return (\r\n      <div className = \"container\">\r\n        <form className = \"white\">\r\n          <h5 className = \"grey-text text-darken-3\"> Update a Project </h5>\r\n          <div>\r\n            <input \r\n              type = \"text\" \r\n              id = 'title' \r\n              onChange = { this.handleChange } \r\n              value = { this.state.title }\r\n            />\r\n            <label htmlFor = \"title\"> Project Title </label>\r\n          </div>\r\n          <div>\r\n            <textarea \r\n              id = \"content\" \r\n              className = \"materialize-textarea\" \r\n              onChange = { this.handleChange } \r\n              value = { this.state.content }\r\n            />\r\n            <label htmlFor = \"content\"> Project Content </label>\r\n          </div>\r\n          <div className = \"input-field\">\r\n            <button \r\n              className = \"btn pink lighten-1\" \r\n              onClick = { this.handleUpdate2 }\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className = \"col s12 m6\">\r\n            <ProjectListUpdated \r\n                          projectsBase = { this.props.projectsBase }\r\n                          handleUpdate = { this.handleUpdate }\r\n                          deleteProject = { this.props.deleteProject }\r\n            />\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.projectReducer.projects,\r\n    projectsBase: state.firestore.ordered.projects \r\n  }\r\n} \r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateProject: (id, title, content) => dispatch(updateProject(id, title, content)),\r\n    deleteProject: (id) => dispatch(deleteProject(id))\r\n  }\r\n}\r\n\r\nexport default compose (\r\n  connect ( mapStateToProps, mapDispatchToProps ),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc']}\r\n  ]))(UpdateProject);","import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n//actions\r\nimport { signIn } from '../../store/actions/authActions'\r\n\r\nclass SignIn extends Component {\r\n\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n    this.setState(\r\n      {\r\n        email: '',\r\n        password: ''    \r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to = '/' /> \r\n\r\n    return (\r\n      <div className = \"container\">\r\n        <form \r\n          className = \"white\" \r\n          onSubmit = { this.handleSubmit }\r\n        >\r\n          <h5 className = \"grey-text text-darken-3\"> Sign In </h5>\r\n          <div className = \"input-field\">\r\n            <label htmlFor = \"email\">Email</label>\r\n            <input \r\n              type = \"email\" \r\n              id = 'email' \r\n              onChange = { this.handleChange } \r\n            />\r\n          </div>\r\n          <div className = \"input-field\">\r\n            <label htmlFor = \"password\"> Password </label>\r\n            <input \r\n              type = \"password\" \r\n              id = 'password' \r\n              onChange = { this.handleChange } \r\n            />\r\n          </div>\r\n          <div className = \"input-field\">\r\n            <button className = \"btn yellow lighten-1 z-depth-0\"> Login </button>\r\n            <div className = \"center red-text\">\r\n              { authError ? <p> { authError } </p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( SignIn )\r\n","import React, { Component } from 'react'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n//actions\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [ e.target.id ]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp( this.state );\r\n    this.setState(\r\n        {\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',    \r\n        }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to = '/' /> \r\n    \r\n    return (\r\n      <div className = \"container\">\r\n        <form \r\n          className = \"white\" \r\n          onSubmit = { this.handleSubmit }\r\n        >\r\n          <h5 className = \"grey-text text-darken-3\"> Sign Up </h5>\r\n          <div className = \"input-field\">\r\n            <label htmlFor = \"email\"> Email </label>\r\n            <input \r\n              type = \"email\" \r\n              id = 'email' \r\n              onChange = { this.handleChange }\r\n            />\r\n          </div>\r\n          <div className = \"input-field\">\r\n            <label htmlFor = \"password\"> Password </label>\r\n            <input \r\n              type = \"password\" \r\n              id = 'password' \r\n              onChange = { this.handleChange } \r\n            />\r\n          </div>\r\n          <div className = \"input-field\">\r\n            <label htmlFor = \"firstName\"> First Name </label>\r\n            <input \r\n              type = \"text\" \r\n              id = 'firstName' \r\n              onChange = { this.handleChange } \r\n            />\r\n          </div>\r\n          <div className = \"input-field\">\r\n            <label htmlFor = \"lastName\"> Last Name </label>\r\n            <input \r\n              type = \"text\" \r\n              id = 'lastName' \r\n              onChange = { this.handleChange } \r\n            />\r\n          </div>\r\n          <div className = \"input-field\">\r\n            <button className = \"btn blue lighten-1 z-depth-0\"> Sign Up </button>\r\n            <div className = \"center red-text\">\r\n              { authError ? <p> { authError } </p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n  return {\r\n    signUp: (creds) => dispatch(signUp(creds))\r\n  }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( SignUp )","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n//components\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport CreateProject from './components/projects/CreateProject'\nimport  UpdateProject  from './components/projects/UpdateProject';\nimport  SignIn  from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path = '/' component = { Dashboard } />\n            <Route path = '/project/:id' component = { ProjectDetails } />\n            <Route path = '/create' component = { CreateProject } />\n            <Route path = '/update' component = { UpdateProject } />\n            <Route path = '/signin' component = { SignIn } />\n            <Route path = '/signup' component = { SignUp } />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error')\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\n  projects: [\r\n    { id: \"1\",\r\n      title: \"help me\", \r\n      content: \"blah blah blah\"\r\n    }\r\n  ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  if (action.type === \"CREATE_PROJECT_SUCCESS\"){\r\n     return Object.assign( {}, state, {\r\n         projects: [\r\n             ...state.projects,\r\n             {\r\n                title: action.title,\r\n                content: action.content\r\n             }\r\n         ]\r\n         \r\n     })\r\n}\r\nif (action.type === \"DELETE_PROJECT_SUCCESS\"){\r\n  const liste =  state.projects || []\r\n  return (\r\n      liste.filter( (proj) => proj.id !== action.id )\r\n  ); \r\n} \r\nif (action.type === \"UPDATE_PROJECT_SUCCESS\"){\r\n  return Object.assign({}, state, {\r\n      projects: [\r\n          ...state.projects,\r\n          {\r\n            id: new Date(),\r\n            title: action.title,\r\n            content: action.content\r\n          }\r\n      ]\r\n  })\r\n}  \r\nreturn state\r\n}\r\n\r\nexport default projectReducer;","import { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n//reducers\r\nimport authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAjWsmlzDNKHrv2wgpg9OOTJVCUTRajpAs\",\r\n  authDomain: \"crudformation-ff555.firebaseapp.com\",\r\n  databaseURL: \"https://crudformation-ff555.firebaseio.com\",\r\n  projectId: \"crudformation-ff555\",\r\n  storageBucket: \"crudformation-ff555.appspot.com\",\r\n  messagingSenderId: \"569060381232\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//components\nimport App from './App';\n//reducers\nimport rootReducer from './store/reducers/rootReducer'\n\nimport {Provider} from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { reduxFirestore, getFirestore, createFirestoreInstance} from 'redux-firestore';\nimport { ReactReduxFirebaseProvider  } from 'react-redux-firebase';\nimport firebase from './config/fbConfig';\nimport {BrowserRouter} from 'react-router-dom';\nimport thunk from 'redux-thunk';\n\nconst myStore = createStore ( rootReducer,\n    compose (\n        applyMiddleware (\n            thunk.withExtraArgument ( getFirestore )\n        ),\n        reduxFirestore ( firebase )\n    )\n);\nconst rrfProps = {\n    firebase,\n    config: {},\n    dispatch: myStore.dispatch,\n    createFirestoreInstance // <- needed if using firestore\n}\n     \nReactDOM.render(\n    <BrowserRouter>\n    <Provider store = { myStore }>\n         <ReactReduxFirebaseProvider { ...rrfProps }>\n           <App />\n       </ReactReduxFirebaseProvider>\n    </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}